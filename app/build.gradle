apply plugin: 'com.android.application'

android {
    compileSdkVersion 33

    defaultConfig {
        applicationId "com.forrestguice.suntimes.intervalmidpoints"
        minSdkVersion 14
        //noinspection OldTargetApi
        targetSdkVersion 33
        versionCode 4
        versionName "0.1.3"

        manifestPlaceholders = [suntimesApplicationId:"com.forrestguice.suntimeswidget", suntimesPermissionRoot:"suntimes",
                                intervalMidpointsAuthorityRoot:"suntimes.intervalmidpoints"]
        buildConfigField "String", "GIT_HASH", "\"${getGitHash()}\""

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        vectorDrawables.useSupportLibrary = true
        missingDimensionStrategy 'version', 'androidx'
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "versiontype"
    productFlavors {
        fdroid {
            dimension "versiontype"
            getIsDefault().set(true)
        }
        nightly {
            dimension "versiontype"
            applicationIdSuffix ".nightly"
            versionNameSuffix "-nightly"
            manifestPlaceholders = [suntimesApplicationId:"com.forrestguice.suntimeswidget", suntimesPermissionRoot:"suntimes",
                                    intervalMidpointsAuthorityRoot:"suntimes.intervalmidpoints.nightly"]
            def nightlyVersionCode = new Date().format('yyyyMMddhh') as int
            versionCode nightlyVersionCode
        }
    }

    lintOptions {
        disable 'MissingTranslation'//,'WrongRegion','ObsoleteSdkInt'
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

}

dependencies {
    implementation project(path: ":SuntimesAddon")  //implementation 'com.github.forrestguice:SuntimesAddon:v0.4.3'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

def getGitHash()
{
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}